buildscript {
    repositories {
        maven {url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6-rc1")
    }
}


plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "org.flywaydb.flyway" version "5.2.4"
    id "org.sonarqube" version "2.7"
    id 'java'
}
apply plugin: "org.sonarqube"
apply plugin: "jacoco"
apply plugin: 'application'

mainClassName = "com.ruifeng.quickstart.QuickStartApplication"


applicationDefaultJvmArgs = [
        '-XX:MetaspaceSize=128m', //（元空间默认大小）
        '-XX:MaxMetaspaceSize=128m',// （元空间最大大小）
        '-Xms1024m', //（堆最大大小）
        '-Xmx1024m', //（堆默认大小）
        '-Xmn256m', //（新生代大小）
        '-Xss256k', //（棧最大深度大小）
        '-XX:SurvivorRatio=8', //（新生代分区比例 8:2）
        '-XX:+UseConcMarkSweepGC',// （指定使用的垃圾收集器，这里使用CMS收集器）
        '-XX:+PrintGCDetails',// （打印详细的GC日志）
]


sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.sonar.binaries", "build/classes/main"
        property "sonar.working.directory", "build/reports/sonar"

        property "sonar.coverage.exclusions", [
                'src/main/java/com/ruifeng/quickstart/**',
        ]
    }
}

flyway {
    url = 'jdbc:mysql://127.0.0.1:3306/db_dev?characterEncoding=utf8&useSSL=false'
    user = 'root'
    password = 'root'
    baselineOnMigrate = false
    locations = ['classpath:db/migration/dev']
    schemas = ['db_dev']
}


group = 'com.ruifeng'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.10.7'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.10.7'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.10.7'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
